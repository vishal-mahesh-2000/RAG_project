[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "local-rag-pdf-qa"
version = "1.0.0"
description = "Private local RAG system for PDF Q&A - no API calls, no cloud uploads"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business",
]
keywords = ["RAG", "LLM", "PDF", "embeddings", "vector-search", "offline", "privacy"]

dependencies = [
    "pymupdf==1.24.5",
    "pymupdf4llm==0.16.11",
    "pdf2image==1.17.0",
    "pytesseract==0.3.13",
    "Pillow==11.0.0",
    "opencv-python==4.9.0.80",
    "numpy==1.26.4",
    "requests==2.32.3",
    "python-dotenv==1.0.1",
    "faiss-cpu==1.7.4",
    "psutil==6.0.0",
    "streamlit==1.40.1",
    "ollama==0.3.2",
    "langchain==0.2.6",
    "langchain-community==0.2.6",
    "pydantic==2.7.4",
    "pydantic-settings==2.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.4",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "black==23.12.1",
    "flake8==6.1.0",
    "isort==5.13.2",
    "mypy==1.8.0",
    "pylint==3.0.3",
]

gpu = [
    "faiss-gpu==1.7.4",
]

[project.urls]
Homepage = "https://github.com/yourusername/local-rag-pdf-qa"
Documentation = "https://github.com/yourusername/local-rag-pdf-qa/blob/main/README.md"
Repository = "https://github.com/yourusername/local-rag-pdf-qa.git"
Issues = "https://github.com/yourusername/local-rag-pdf-qa/issues"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = false

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0913",  # too-many-arguments
]

[tool.pylint.format]
max-line-length = 100

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --strict-markers --tb=short"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
